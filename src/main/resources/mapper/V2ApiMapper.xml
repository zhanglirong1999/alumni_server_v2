<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.seu.alumni_server.dao.mapper.V2ApiMapper">

    <select id="searchByName"
            resultType="cn.edu.seu.alumni_server.controller.dto.BriefInfo">
          select a.account_id, a.openid, a.avatar, a.name, a.city, a.self_desc,b.school,b.college,c.company
          from ((account a left join education b on a.account_id=b.account_id)
          left join job c on a.account_id=c.account_id)
          where a.account_id in (
          select distinct d.account_id from account d where name like
          CONCAT('%', #{content}, '%'))
      </select>
    <select id="searchBySchool"
            resultType="cn.edu.seu.alumni_server.controller.dto.BriefInfo">
          select a.account_id, a.openid, a.avatar, a.name, a.city, a.self_desc,b.school,b.college,c.company
          from ((account a left join education b on a.account_id=b.account_id)
          left join job c on a.account_id=c.account_id)
          where a.account_id in (
          select distinct d.account_id from education d where d.school like
          CONCAT('%', #{content}, '%'))

      </select>
    <select id="searchByCollege"
            resultType="cn.edu.seu.alumni_server.controller.dto.BriefInfo">
          select a.account_id, a.openid, a.avatar, a.name, a.city, a.self_desc,b.school,b.college,c.company
          from ((account a left join education b on a.account_id=b.account_id)
          left join job c on a.account_id=c.account_id)
          where a.account_id in (
          select distinct d.account_id from education d where d.college like
          CONCAT('%', #{content}, '%'))
      </select>
    <select id="searchByCity"
            resultType="cn.edu.seu.alumni_server.controller.dto.BriefInfo">
          select a.account_id, a.openid, a.avatar, a.name, a.city, a.self_desc,b.school,b.college,c.company
          from ((account a left join education b on a.account_id=b.account_id)
          left join job c on a.account_id=c.account_id)
          where a.account_id in (
          select distinct d.account_id from account d where d.city like
          CONCAT('%', #{content}, '%'))
      </select>
    <select id="searchByCompany"
            resultType="cn.edu.seu.alumni_server.controller.dto.BriefInfo">
          select a.account_id, a.openid, a.avatar, a.name, a.city, a.self_desc,b.school,b.college,c.company
          from ((account a left join education b on a.account_id=b.account_id)
          left join job c on a.account_id=c.account_id)
          where a.account_id in (
          select distinct d.account_id from job d where d.company like
          CONCAT('%', #{content}, '%'))
      </select>
    <select id="searchByPosition"
            resultType="cn.edu.seu.alumni_server.controller.dto.BriefInfo">
          select a.account_id, a.openid, a.avatar, a.name, a.city, a.self_desc,b.school,b.college,c.company
          from ((account a left join education b on a.account_id=b.account_id)
          left join job c on a.account_id=c.account_id)
          where a.account_id in (
          select distinct d.account_id from job d where d.position like
          CONCAT('%', #{content}, '%'))
      </select>
    <select id="searchBySelfDesc"
            resultType="cn.edu.seu.alumni_server.controller.dto.BriefInfo">
          select a.account_id, a.openid, a.avatar, a.name, a.city, a.self_desc,b.school,b.college,c.company
          from ((account a left join education b on a.account_id=b.account_id)
          left join job c on a.account_id=c.account_id)
          where a.account_id in (
          select distinct d.account_id from account d where d.self_desc like
          CONCAT('%', #{content}, '%'))
      </select>

    <select id="getFriends"
            resultType="cn.edu.seu.alumni_server.controller.dto.FriendDTO">
          select b.account_id as friendAccountId,b.name,c.company,c.position,a.status,b.avatar,b.city
          from ((friend a left join account b on a.friend_account_id= b.account_id)
          left join (
          select max(account_id) as account_id_t,company,position
          from job group by account_id
          ) c on b.account_id = c.account_id_t)
          where a.account_id=#{accountId}
          UNION DISTINCT
          select b.account_id as friendAccountId,b.name,c.company,c.position,b.avatar,b.city,
          CASE a.status
          WHEN a.status=0 THEN 0
          WHEN a.status=1 THEN 3
          WHEN a.status=2 THEN 2
          END
          from ((friend a left join account b on a.account_id = b.account_id)
          left join (
          select max(account_id)as account_id,company,position from job group by account_id
          ) c on b.account_id = c.account_id)
          where a.friend_account_id=#{accountId}
      </select>


    <!--    private Long friendAccountId;-->
    <!--    private String name;-->
    <!--    private String company;-->
    <!--    private String position;-->
    <!--    private Long status;-->
</mapper>